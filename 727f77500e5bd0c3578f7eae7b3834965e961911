{"timestamp":"1455455932","author":"hazbo","description":"Hey @andreineculau,\r\n\r\nYou raise some interesting points here. I'm sure @ojarjur will be able to respond in more detail but I figured I'd weigh in here.\r\n\r\n\u003e to see no correlation, nor explanation, as to why this is called git-appraise, although we talk about reviews\r\n\r\nYour right, in terms of the docs and the code itself the term review is used, rather than appraise. \r\n\r\n`git-appraise` is simply just the name of the project and also the git command. However I find the words 'review' and 'appraise', under the given context, somewhat synonymous given that to appraise, is to \"assess the value or quality of\", which I find works quite nicely with this project as that is literally  the reason why someone would request a code review. Personally I prefer appraise over review as both the name of the project and the git command - that's just my opinion though ;)\r\n\r\n\u003e submitting vs merging/rebasing\r\n\r\nI'm not sure whether or not by this you mean; \"why would I use `git appraise submit 8cb887077783` as appose to `git merge`\", or why isn't it `git appraise merge 8cb887077783` instead of `submit`. Either way they're both perfectly valid questions, so I'll answer both.\r\n\r\n1) `submit` is one subcommand that deals with both closing the code review (changing it from 'accepted'), and the way in which the code is actually merged. So with this subcommand you may use `--merge` or `--rebase` or `--fast-forward`, or you may configure this globally within the scope of your project. By default it will use fast-forward. If you're using `git-appraise` in any meaningful way, the submit command seems to make the most sense.\r\n\r\n2) Git already has merge and rebase subcommands. The focus there is on merging the code. The focus with git-appraise is to close (submit) the review along with the code. So rather than having 3 subcommands to submit the review we just use `submit` and optionally allow the flags at stated above.\r\n\r\nThese are just my opinions on two of the points you brought up. I hope this provides some insight. :)"}

{"timestamp":"1455455932","author":"hazbo","description":"Hey @andreineculau,\r\n\r\nYou raise some interesting points here. I'm sure @ojarjur will be able to respond in more detail but I figured I'd weigh in here.\r\n\r\n\u003e to see no correlation, nor explanation, as to why this is called git-appraise, although we talk about reviews\r\n\r\nYour right, in terms of the docs and the code itself the term review is used, rather than appraise. \r\n\r\n`git-appraise` is simply just the name of the project and also the git command. However I find the words 'review' and 'appraise', under the given context, somewhat synonymous given that to appraise, is to \"assess the value or quality of\", which I find works quite nicely with this project as that is literally  the reason why someone would request a code review. Personally I prefer appraise over review as both the name of the project and the git command - that's just my opinion though ;)\r\n\r\n\u003e submitting vs merging/rebasing\r\n\r\nI'm not sure whether or not by this you mean; \"why would I use `git appraise submit 8cb887077783` as appose to `git merge`?\", or \"why isn't it `git appraise merge 8cb887077783` instead of `submit`?\". Either way they're both perfectly valid questions, so I'll answer both.\r\n\r\n1) `submit` is one subcommand that deals with both closing the code review (changing it from 'accepted'), and the way in which the code is actually merged. So with this subcommand you may use `--merge` or `--rebase` or `--fast-forward`, or you may configure this globally within the scope of your project. By default it will use fast-forward. If you're using `git-appraise` in any meaningful way, the submit command seems to make the most sense.\r\n\r\n2) Git already has merge and rebase subcommands. The focus there is on merging the code. The focus with git-appraise is to close (submit) the review along with the code. So rather than having 3 subcommands to submit the review we just use `submit` and optionally allow the flags at stated above.\r\n\r\nThese are just my opinions on two of the points you brought up. I hope this provides some insight. :)"}

{"timestamp":"1455456792","author":"andreineculau","description":"thanks @hazbo . I will sprinkle the diff with the questions, for you and @ojarjur, as it provides context e.g. I meant \"why git appraise submit --merge instead of git review merge?\""}

{"timestamp":"1455456876","author":"andreineculau","location":{"commit":"727f77500e5bd0c3578f7eae7b3834965e961911","path":"README.md","range":{"startLine":58}},"description":"my suggestions are in line with the builtin `git branch` and `git tag` for instance\r\n\r\nNOTE: should also support the short `-l`"}

{"timestamp":"1455456895","author":"andreineculau","location":{"commit":"727f77500e5bd0c3578f7eae7b3834965e961911","path":"README.md","range":{"startLine":66}},"description":"my suggestion is in line with `git log`"}

{"timestamp":"1455457175","author":"andreineculau","location":{"commit":"727f77500e5bd0c3578f7eae7b3834965e961911","path":"README.md","range":{"startLine":79}},"description":"the goal of a \"pull request\", \"merge request\", \"review\", etc is to be \"merged\" (not necessarily ad-literam with git-merge, but to make its way into the targetRef)\r\n\r\npoint is that the phrase \"submit\" has no equivalent in the git world, but there are merge/rebase equivalents."}

{"timestamp":"1455457239","author":"andreineculau","location":{"commit":"727f77500e5bd0c3578f7eae7b3834965e961911","path":"README.md","range":{"startLine":91}},"description":"if this tool is called `git-appraise`, or `git-review` as with my suggestion, then take ownership over the git-appraise/git-review namespace, not `devtools`"}

{"timestamp":"1455457305","author":"andreineculau","location":{"commit":"727f77500e5bd0c3578f7eae7b3834965e961911","path":"README.md","range":{"startLine":101}},"description":"if the bucket holds requests, then the namespace should follow"}

{"timestamp":"1455457376","author":"andreineculau","location":{"commit":"727f77500e5bd0c3578f7eae7b3834965e961911","path":"README.md","range":{"startLine":206}},"description":"scratch this. this should be the other way around i.e. talk about analyses, not \"robot comments\", and keep to `refs/notes/*/analyses`"}
