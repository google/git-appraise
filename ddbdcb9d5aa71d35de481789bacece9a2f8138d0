{"timestamp":"1447284512","author":"ckerur","description":"Overall Looks good. "}

{"timestamp":"1447284512","author":"ckerur","location":{"commit":"a3f462b139c47923e69b34b7c43cf63d3866560d","path":"commands/output/output.go","range":{"startLine":83}},"description":"Can an exception be thrown here ?"}

{"timestamp":"1447284512","author":"ckerur","location":{"commit":"a3f462b139c47923e69b34b7c43cf63d3866560d","path":"commands/output/output.go","range":{"startLine":56}},"description":"this method is a little confusing to read.\n\nConsider changing  into 2 methods -one that calculates status and the other that does the printing ...\n\nThat way this method could look like\n\nif(r.Resolved == nil and r.Submitted)\n  return \"tbr\"\nif(r.Resolved == nil)\nreturn \"pending\"\n\nif (*r.Resolved ){\n    if(r.Submitted) {\n        return \"submitted\"\n   }\n   else return \"rejected\"\n}\n\nif(r.submitted)\n   return \"danger\"...\n\n\n"}

{"timestamp":"1447350213","author":"ojarjur@google.com","parent":"84dcc530c84be282f2491ebd6891a005543691dc","location":{"commit":"a3f462b139c47923e69b34b7c43cf63d3866560d"},"description":"No, no exceptions can come out of this. The method is meant to be safe for any string; if it sees one that it doesn't know how to handle, then it just leaves it alone."}

{"timestamp":"1447350868","author":"ojarjur@google.com","parent":"5b43306eea8f2413a394f70224289468b8020a5c","location":{"commit":"a3f462b139c47923e69b34b7c43cf63d3866560d"},"description":"Done","resolved":true}

{"timestamp":"1447351671","author":"ckerur","location":{"commit":"cf2857001dc0ad09db95bbd61931aa41f6128cb2","path":"commands/output/output.go","range":{"startLine":88}},"description":"Just repeating..what happens if an exception is thrown here ? How does Go handle it ?"}

{"timestamp":"1447352390","author":"ojarjur@google.com","parent":"698898fa30f5c1c44263dee73001a523ee6796a4","location":{"commit":"cf2857001dc0ad09db95bbd61931aa41f6128cb2"},"description":"Go does not have special control flow for expcetions the way Java (for instance) does. Since this method does not declare error as part of its return type, the only way it can not return a string is if the entire program exits"}

{"timestamp":"1447359390","author":"git-mirror","location":{"commit":"cf2857001dc0ad09db95bbd61931aa41f6128cb2","path":"commands/output/output.go","range":{"startLine":88}},"description":"ojarjur@google.com:\n\nGo does not have special control flow for expcetions the way Java (for instance) does. Since this method does not declare error as part of its return type, the only way it can not return a string is if the entire program exits"}
