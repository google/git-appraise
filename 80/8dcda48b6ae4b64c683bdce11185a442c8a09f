{"timestamp":"1464892618","author":"ojarjur","description":"Thanks for picking this up.\r\n\r\nI'll admit I'm also a little unsure of what the right behavior should be. I'm currently leaning toward the opinion that we can't really win, so we have to go with the least-bad option.\r\n\r\nI think that we should still keep the `list` subcommand, and that `git appraise` should not support all of the flags that `git appraise list` supports. The reason I lean towards that is because it:\r\n\r\n1. Will make the default behavior applicable more often (i.e. I want to list the open reviews very frequently, but very rarely want to see the help text).\r\n2. Will save us from having to make the default help text very complicated (i.e. the list flags only have to be shown in the output of `git appraise help list`).\r\n\r\nThat corresponds with the change you have right now, so I agree with your current proposal.\r\n\r\nThe downside of this approach is that we now have two ways to list the open reviews (`git appraise` and `git appraise list`). However, the same can be said for listing branches (`git branch` and `git branch --list`), so I guess we are at least being somewhat consistent with the git interface.\r\n\r\nWe should probably also update the default help message so that it explains that we list open reviews by default."}
{"timestamp":"1464892634","author":"ojarjur","location":{"commit":"808dcda48b6ae4b64c683bdce11185a442c8a09f","path":"git-appraise/git-appraise.go","range":{"startLine":92}},"description":"I think `git appraise help` should still work even if the current directory is not inside of a git repository.\r\n\r\nPerhaps make this something like:\r\n\r\n    if len(os.Args) \u003e 0 \u0026\u0026 os.Args[1] == \"help\" {\r\n\r\n... and move this block to line 71"}

{"timestamp":"1464946434","author":"hazbo","description":"I think this is starting to shape up a bit now. Although this may not be 100% consistent with how git branch / tag works, I don't think this is a case of not being able to win. I think that this is intuitive and straight forward to use. By keeping the list subcommand a user can specify flags to be more specific if they so desire.\r\n\r\nListing reviews without the subcommand is a nice touch. It's probably going to be used more than the list subcommand now anyway."}

{"timestamp":"1464978735","author":"ojarjur","description":"\u003e we can't really win, so we have to go with the least-bad option.\r\n\r\nThis was a poor choice of wording on my part. Sorry about that.\r\n\r\nThis change isn't a 'least-bad' option; it's a good option. What I was trying to get at is that there is no perfect solution, because we either have inconsistencies with `git branch` or we have multiple ways to do the same thing.\r\n\r\nRegardless, this looks good to me now.\r\n\r\nThanks again for taking this on and getting it fixed!"}

{"timestamp":"1464978827","author":"ojarjur@google.com","location":{"commit":"2179bea626c851b0ad78c6eedb7ec08217660849"},"resolved":true}

{"timestamp":"1464892618","author":"ojarjur","description":"Thanks for picking this up.\n\nI'll admit I'm also a little unsure of what the right behavior should be. I'm currently leaning toward the opinion that we can't really win, so we have to go with the least-bad option.\n\nI think that we should still keep the `list` subcommand, and that `git appraise` should not support all of the flags that `git appraise list` supports. The reason I lean towards that is because it:\n1. Will make the default behavior applicable more often (i.e. I want to list the open reviews very frequently, but very rarely want to see the help text).\n2. Will save us from having to make the default help text very complicated (i.e. the list flags only have to be shown in the output of `git appraise help list`).\n\nThat corresponds with the change you have right now, so I agree with your current proposal.\n\nThe downside of this approach is that we now have two ways to list the open reviews (`git appraise` and `git appraise list`). However, the same can be said for listing branches (`git branch` and `git branch --list`), so I guess we are at least being somewhat consistent with the git interface.\n\nWe should probably also update the default help message so that it explains that we list open reviews by default.\n"}
