{"timestamp":"1588033011","reviewRef":"refs/pull/98/head","targetRef":"refs/heads/master","requester":"ojarjur","description":"Cleanup and generalize the API for low-level repository operations.\n\nThis change cleans up the API for low-level repository operations\r\nin the following ways:\r\n\r\n1. Introduce more generic operations on the underlying repository\r\n   DAG objects (i.e. blobs, trees, commits, and refs).\r\n2. Fix a bug in the code for merging archives where we did not\r\n   check if the local archives ref existed before trying to\r\n   resolve it.\r\n\r\nPreviously, the API exposed by the `repository` interface was very\r\ntailored to the tasks that the git-appraise needed to perform for\r\ncode reviews. That meant that adding new features which used the\r\nrepository in slightly different ways would require rather large\r\nchanges to the repository interface.\r\n\r\nUnder the new API, any feature that simply relies upon the\r\nfeatures of git should be able to use the API without changes.\r\n\r\nThis was originally part of the pull request to add support for\r\nforks, but is now being split off into a stand-alone pull request\r\nso that it can be reviewed in isolation, and so that it is\r\navailable for other work like the proposed change to support\r\ndetached comments (#97).\r\n\r\nThe bug-fix for the archives issue is being included in here\r\nbecause the refactoring to clean up the repository code is what\r\nmade us catch the underlying bug. The issue with that bug is that\r\nwe tried to use a single command ('git show') to both check if\r\nthe local archives ref (`refs/devtools/archives/reviews`) exists\r\nand to resolve what commit it points to. However, that command\r\nreturns an error if the ref does not exist.\r\n\r\nThis change fixes it by including an explicit check to see if\r\nthe ref exists before trying to resolve it.","baseCommit":"45703e83847b4cd2c40bb7f21b3cc5461594c1e3"}
