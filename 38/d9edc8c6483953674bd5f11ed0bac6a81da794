{"timestamp":"1588631863","author":"KoopaKing","location":{"commit":"07aa6b7df882e58da3ab315578fc8524c8d87a7a","path":"repository/git.go","range":{"startLine":269}},"description":"You don't need to fix this here, but the lambda closure of `err` is a bit sketchy for this `show` function with it being selectively checked."}

{"timestamp":"1588712183","author":"KoopaKing","location":{"commit":"07aa6b7df882e58da3ab315578fc8524c8d87a7a","path":"repository/git.go","range":{"startLine":516}},"description":"Maybe I just haven't read Blob yet, but it seems strange to trust the `savedHash` for a potentially mutable blob. This must assume that either:\r\n 1) `Blob` objects in this library are immutable\r\n 2) `Blob` objects properly recompute the `savedHash` if the `Contents` change\r\n 3) `Blob` objects properly unset the `savedHash` when `Contents` change and using this function sets `savedHash`\r\n\r\nEither way it makes this method's interface a bit strange (to me at least). If we are not setting `b.savedHash`, but are returning the correct hash that `b` was stored with, that seems to indicate that the user is responsible for setting `savedHash` themselves, which seems counterintuitive given the above assumptions about immutability or compute-on-change."}

{"timestamp":"1588712294","author":"KoopaKing","location":{"commit":"07aa6b7df882e58da3ab315578fc8524c8d87a7a","path":"repository/git.go","range":{"startLine":516}},"description":"This comment also applies to the below `StoreTree` method."}

{"timestamp":"1588719787","author":"KoopaKing","location":{"commit":"07aa6b7df882e58da3ab315578fc8524c8d87a7a","path":"repository/git.go","range":{"startLine":966}},"description":"Nit: maybe `fetchSpecs` should be renamed `refspec` to better align with the git CLI, or if it is intended to be something different, than maybe it should be more opinionated than `[]string` (although I think this is just refspec...)"}

{"timestamp":"1588720058","author":"KoopaKing","location":{"commit":"07aa6b7df882e58da3ab315578fc8524c8d87a7a","path":"repository/git.go","range":{"startLine":1025}},"description":"formatting seems a little strange on the string concats of the second param here."}

{"timestamp":"1588720114","author":"KoopaKing","location":{"commit":"07aa6b7df882e58da3ab315578fc8524c8d87a7a","path":"repository/git.go","range":{"startLine":1021}},"description":"I notice some of these ref prefixes are used in multiple places, maybe you should make them constants instead of inlining them?"}

{"timestamp":"1588720362","author":"KoopaKing","location":{"commit":"07aa6b7df882e58da3ab315578fc8524c8d87a7a","path":"repository/git.go","range":{"startLine":1062}},"description":"It's not super obvious to me why this wouldn't use a similar ref pattern to notes... like `refs/devtools/remotes/$remote/$relativeRef`\r\n\r\n"}

{"timestamp":"1588720720","author":"KoopaKing","location":{"commit":"07aa6b7df882e58da3ab315578fc8524c8d87a7a","path":"repository/git.go","range":{"startLine":1067}},"description":"`return devtoolsRefPrefix + relativeRef`"}

{"timestamp":"1588720766","author":"KoopaKing","location":{"commit":"07aa6b7df882e58da3ab315578fc8524c8d87a7a","path":"repository/git.go","range":{"startLine":1061}},"description":"can you reference the var `devtoolsRefPrefix` instead of inlining the string here?"}

{"timestamp":"1588721064","author":"KoopaKing","location":{"commit":"07aa6b7df882e58da3ab315578fc8524c8d87a7a","path":"repository/git.go","range":{"startLine":1113}},"description":"Nit: should this be using the above defined `Fetch` function?"}

{"timestamp":"1591126188","author":"ojarjur","location":{"commit":"07aa6b7df882e58da3ab315578fc8524c8d87a7a","path":"repository/git.go","range":{"startLine":516}},"description":"Done"}

{"timestamp":"1591126216","author":"ojarjur","location":{"commit":"07aa6b7df882e58da3ab315578fc8524c8d87a7a","path":"repository/git.go","range":{"startLine":269}},"description":"Ack"}

{"timestamp":"1591142703","author":"ojarjur","location":{"commit":"07aa6b7df882e58da3ab315578fc8524c8d87a7a","path":"repository/git.go","range":{"startLine":1025}},"description":"If you mean the lack of spaces between values, that is because it is a method argument. The formatting is automatic and performed by `gofmt`"}
